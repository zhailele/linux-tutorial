(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{472:function(s,t,a){"use strict";a.r(t);var e=a(14),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"grep"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grep"}},[s._v("#")]),s._v(" grep")]),s._v(" "),a("p",[s._v("强大的文本搜索工具")]),s._v(" "),a("h2",{attrs:{id:"补充说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[s._v("#")]),s._v(" 补充说明")]),s._v(" "),a("p",[a("strong",[s._v("grep")]),s._v(" （global search regular expression(RE) and print out the line，全面搜索正则表达式并把行打印出来）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。用于过滤/搜索的特定字符。可使用正则表达式能多种命令配合使用，使用上十分灵活。")]),s._v(" "),a("h3",{attrs:{id:"选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[s._v("#")]),s._v(" 选项")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("-a --text  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不要忽略二进制数据。")]),s._v("\n-A "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("显示行数"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   --after-context"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("显示行数"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 除了显示符合范本样式的那一行之外，并显示该行之后的内容。")]),s._v("\n-b --byte-offset                           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在显示符合范本样式的那一行之外，并显示该行之前的内容。")]),s._v("\n-B"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("显示行数"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   --before-context"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("显示行数"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 除了显示符合样式的那一行之外，并显示该行之前的内容。")]),s._v("\n-c --count    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 计算符合范本样式的列数。")]),s._v("\n-C"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("显示行数"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --context"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("显示行数"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("或-"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("显示行数"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 除了显示符合范本样式的那一列之外，并显示该列之前后的内容。")]),s._v("\n-d"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("进行动作"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --directories"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("动作"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep命令将回报信息并停止动作。")]),s._v("\n-e"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("范本样式"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --regexp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("范本样式"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定字符串作为查找文件内容的范本样式。")]),s._v("\n-E --extended-regexp             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将范本样式为延伸的普通表示法来使用，意味着使用能使用扩展正则表达式。")]),s._v("\n-f"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("范本文件"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("规则文件"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定范本文件，其内容有一个或多个范本样式，让grep查找符合范本条件的文件内容，格式为每一列的范本样式。")]),s._v("\n-F --fixed-regexp   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将范本样式视为固定字符串的列表。")]),s._v("\n-G --basic-regexp   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将范本样式视为普通的表示法来使用。")]),s._v("\n-h --no-filename    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在显示符合范本样式的那一列之前，不标示该列所属的文件名称。")]),s._v("\n-H --with-filename  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在显示符合范本样式的那一列之前，标示该列的文件名称。")]),s._v("\n-i --ignore-case    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 忽略字符大小写的差别。")]),s._v("\n-l --file-with-matches   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出文件内容符合指定的范本样式的文件名称。")]),s._v("\n-L --files-without-match "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出文件内容不符合指定的范本样式的文件名称。")]),s._v("\n-n --line-number         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在显示符合范本样式的那一列之前，标示出该列的编号。")]),s._v("\n-P --perl-regexp         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# PATTERN 是一个 Perl 正则表达式")]),s._v("\n-q --quiet或--silent     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不显示任何信息。")]),s._v("\n-R/-r  --recursive       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 此参数的效果和指定“-d recurse”参数相同。")]),s._v("\n-s --no-messages  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不显示错误信息。")]),s._v("\n-v --revert-match "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 反转查找。")]),s._v("\n-V --version      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示版本信息。")]),s._v("\n-w --word-regexp  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只显示全字符合的列。")]),s._v("\n-x --line-regexp  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只显示全列符合的列。")]),s._v("\n-y "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 此参数效果跟“-i”相同。")]),s._v("\n-o "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只输出文件中匹配到的部分。")]),s._v("\n-m "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("num"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --max-count"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("num"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找到num行结果后停止查找，用来限制匹配行数")]),s._v("\n")])])]),a("h3",{attrs:{id:"规则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规则表达式"}},[s._v("#")]),s._v(" 规则表达式")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("^    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 锚定行的开始 如：'^grep'匹配所有以grep开头的行。")]),s._v("\n$    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 锚定行的结束 如：'grep$' 匹配所有以grep结尾的行。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 匹配一个非换行符的字符 如：'gr.p'匹配gr后接一个任意字符，然后是p。")]),s._v("\n*    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 匹配零个或多个先前字符 如：'*grep'匹配所有一个或多个空格后紧跟grep的行。")]),s._v("\n.*   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一起用代表任意字符。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 匹配一个指定范围内的字符，如'[Gg]rep'匹配Grep和grep。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("^"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 匹配一个不在指定范围内的字符，如：'[^A-FH-Z]rep'匹配不包含A-R和T-Z的一个字母开头，紧跟rep的行。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 标记匹配字符，如'\\(love\\)'，love被标记为1。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 锚定单词的开始，如:'\\<grep'匹配包含以grep开头的单词的行。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 锚定单词的结束，如'grep\\>'匹配包含以grep结尾的单词的行。")]),s._v("\nx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重复字符x，m次，如：'0\\{5\\}'匹配包含5个o的行。")]),s._v("\nx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("m,"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重复字符x,至少m次，如：'o\\{5,\\}'匹配至少有5个o的行。")]),s._v("\nx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("m,n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重复字符x，至少m次，不多于n次，如：'o\\{5,10\\}'匹配5--10个o的行。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("w    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 匹配文字和数字字符，也就是[A-Za-z0-9]，如：'G\\w*p'匹配以G后跟零个或多个文字或数字字符，然后是p。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("W    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# \\w的反置形式，匹配一个或多个非单词字符，如点号句号等。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("b    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 单词锁定符，如: '\\bgrep\\b'只匹配grep。")]),s._v("\n")])])]),a("h2",{attrs:{id:"grep-命令常见用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grep-命令常见用法"}},[s._v("#")]),s._v(" grep 命令常见用法")]),s._v(" "),a("p",[s._v("在文件中搜索一个单词，命令会返回一个包含 "),a("strong",[s._v("“match_pattern”")]),s._v(" 的文本行：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" match_pattern file_name\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"match_pattern"')]),s._v(" file_name\n")])])]),a("p",[s._v("在多个文件中查找：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"match_pattern"')]),s._v(" file_1 file_2 file_3 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),a("p",[s._v("输出除之外的所有行 "),a("strong",[s._v("-v")]),s._v(" 选项：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -v "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"match_pattern"')]),s._v(" file_name\n")])])]),a("p",[s._v("标记匹配颜色 "),a("strong",[s._v("--color=auto")]),s._v(" 选项：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"match_pattern"')]),s._v(" file_name --color"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("auto\n")])])]),a("p",[s._v("使用正则表达式 "),a("strong",[s._v("-E")]),s._v(" 选项：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -E "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[1-9]+"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("egrep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[1-9]+"')]),s._v("\n")])])]),a("p",[s._v("使用正则表达式 "),a("strong",[s._v("-P")]),s._v(" 选项：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -P "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(\\d{3}\\-){2}\\d{4}"')]),s._v(" file_name\n")])])]),a("p",[s._v("只输出文件中匹配到的部分 "),a("strong",[s._v("-o")]),s._v(" 选项：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" this is a "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" line. "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -o -E "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[a-z]+\\."')]),s._v("\nline.\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" this is a "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" line. "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("egrep")]),s._v(" -o "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[a-z]+\\."')]),s._v("\nline.\n")])])]),a("p",[s._v("统计文件或者文本中包含匹配字符串的行数 "),a("strong",[s._v("-c")]),s._v(" 选项：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -c "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v(" file_name\n")])])]),a("p",[s._v("输出包含匹配字符串的行数 "),a("strong",[s._v("-n")]),s._v(" 选项：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v(" -n file_name\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" file_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v(" -n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#多个文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v(" -n file_1 file_2\n")])])]),a("p",[s._v("打印样式匹配所位于的字符或字节偏移：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" gun is not unix "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -b -o "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"not"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(":not\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#一行中字符串的字符便宜是从该行的第一个字符开始计算，起始值为0。选项  **-b -o**  一般总是配合使用。")]),s._v("\n")])])]),a("p",[s._v("搜索多个文件并查找匹配文本在哪些文件中：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -l "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v(" file1 file2 file3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),a("h3",{attrs:{id:"grep-递归搜索文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grep-递归搜索文件"}},[s._v("#")]),s._v(" grep 递归搜索文件")]),s._v(" "),a("p",[s._v("在多级目录中对文本进行递归搜索：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -r -n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# .表示当前目录。")]),s._v("\n")])])]),a("p",[s._v("忽略匹配样式中的字符大小写：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"HELLO"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# hello")]),s._v("\n")])])]),a("p",[s._v("选项 "),a("strong",[s._v("-e")]),s._v(" 制动多个匹配样式：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" this is a text line "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"is"')]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"line"')]),s._v(" -o\nis\nline\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#也可以使用 **-f** 选项来匹配多个样式，在样式文件中逐行写出需要匹配的字符。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" patfile\naaa\nbbb\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" aaa bbb ccc ddd eee "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -f patfile -o\n")])])]),a("p",[s._v("在 grep 搜索结果中包括或者排除指定文件：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 只在目录中所有的.php和.html文件中递归搜索字符"main()"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"main()"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -r --include *."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("php,html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在搜索结果中排除所有README文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"main()"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -r --exclude "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"README"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在搜索结果中排除filelist文件列表里的文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"main()"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -r --exclude-from filelist\n\n")])])]),a("p",[s._v("使用 0 值字节后缀的 grep 与 xargs：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 测试文件：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaa"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" file1\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bbb"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" file2\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaa"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" file3\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaa"')]),s._v(" file* -lZ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -0 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行后会删除file1和file3，grep输出用-Z选项来指定以0值字节作为终结符文件名（\\0），xargs -0 读取输入并用0值字节终结符分隔文件名，然后删除匹配文件，-Z通常和-l结合使用。")]),s._v("\n")])])]),a("p",[s._v("grep 静默输出：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -q "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test"')]),s._v(" filename\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不会输出任何信息，如果命令运行成功返回0，失败则返回非0值。一般用于条件测试。")]),s._v("\n")])])]),a("p",[s._v("打印出匹配文本之前或者之后的行：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示匹配某个结果之后的3行，使用 -A 选项：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5"')]),s._v(" -A "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示匹配某个结果之前的3行，使用 -B 选项：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5"')]),s._v(" -B "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示匹配某个结果的前三行和后三行，使用 -C 选项：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5"')]),s._v(" -C "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果匹配结果有多个，会用“--”作为各匹配结果之间的分隔符：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("c"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('c"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" a -A "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\na\nb\n--\na\nb\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);